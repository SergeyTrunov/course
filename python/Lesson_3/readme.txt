Неделя 3. Перечисляемые объекты
http://heller.ru/course/viewtopic.php?f=7&t=30

Сегодняшняя наша тема - это перечислимые объекты в Python. Самые базовые примеры перечислимых 
объектов: списки (list), наборы, они же кортежи (tuple), диапазоны (range), строки (string), 
словари (dict), множества (set), файлы. В скобках я указал название типа в Python 3. 
Для файлов скобки остались пусты, потому что там с типом файлов всё не так просто 
(в Python 2 был тип file, который удалили из языка в новой версии).

Все эти вещи вы должны изучить самостоятельно. Я могу предложить несколько мест откуда начать:
http://en.wikibooks.org/wiki/Python_Pro ... /Sequences
http://juster.fvds.ru/learnwithpython/ru2e/ch08.html
http://ru.wikisource.org/wiki/Погружение_в_Python_3_(Пилгрим)/Встроенные_типы_данных

Задание 3.1. Если x - строка, то используя x.isdigit() вы можете проверить 
содержит ли x только цифры. Напишите функцию is_number(x), которая будет проверять, 
является ли записанная в x строка произвольным числом:

is_number("-234.12") == True
is_number("asdf") == False


Задание 3.2. Найдите описание решета Эратосфена и реализуйте этот алгоритм. 
Вы должны написать функцию sieve(n), которая возвращает список всех простых чисел вплоть до n. 
(Если бы функцию maximum_prime из прошлой недели пришлось бы звать для целого набора чисел, 
то было бы куда эффективнее вначале получить список всех простых чисел используя 
решето Эратосфена, а затем уже искать делители среди известных простых чисел). 
Обратите внимание, что в Википедии приведена реализация на Питоне якобы решета Эратосфена. 
На самом деле приведённый там код - это не решето Эратосфена, а его подобие, 
которое работает на порядок хуже оригинального алгоритма. 
(Задание со звёздочкой - объясните чем хуже алгоритм из Википедии).

Алгоритм(из вики):
"Для нахождения всех простых чисел не больше заданного числа n, 
следуя методу Эратосфена, нужно выполнить следующие шаги:

Выписать подряд все целые числа от двух до n (2, 3, 4, …, n).
Пусть переменная p изначально равна двум — первому простому числу.
Зачеркнуть в списке числа от 2p до n считая шагами по p (это будут числа кратные p: 2p, 3p, 4p, …).
Найти первое незачеркнутое число в списке, большее чем p, и присвоить значению переменной p это число.
Повторять шаги 3 и 4, пока возможно.
Теперь все незачеркнутые числа в списке — это все простые числа от 2 до n.

На практике, алгоритм можно улучшить следующим образом. 
На шаге № 3 числа можно зачеркивать начиная сразу с числа p2, потому что все составные 
числа меньше него уже будут зачеркнуты к этому времени. И, соответственно, останавливать 
алгоритм можно, когда p2 станет больше, чем n в степени 2.
Также, все p большие чем 2 — нечётные числа, и поэтому для них можно считать шагами по 2p, начиная с p2.


http://www.cleverstudents.ru/divisibility/prime_and_composite_numbers.html
https://ru.wikipedia.org/wiki/Решето_Эратосфена



